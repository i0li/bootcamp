【実施予定内容】
== ruby ==
1.puts / print / p の違いについて調べ、その利用例をコードする
2.真偽値の定義 について調べ、まとめる
3.文字列 をifを用いて比較する
4.数値 をifを用いて比較する
5.変数と定数 の違いについて調べ、その利用例をコードする
6.演算子 について調べ、その利用例をコードする
7.論理演算子 について調べ、その利用例をコードする
8.ifの戻り値について調べ、その利用例をコードする
9.メソッド について調べ、その利用例をコードする
10.メソッドの戻り値 について調べ、その利用例をコードする
11.Stringクラス について調べ、まとめる
12.Numericクラス（Integer / Float / Rational / Complex）について調べ、まとめる
13.unless文 について調べ、その利用例をコードする
14.case文 について調べ、その利用例をコードする
15.三項演算子 について調べ、その利用例をコードする
16.デフォルト引数およびキーワード引数をもつメソッド について調べ、その利用例をコードする
17.真偽値を返すメソッド について調べ、その利用例をコードする
18.破壊的メソッド について調べ、その利用例をコードする
19.疑似変数 について調べ、その利用例をコードする
20.参照渡し | 値渡し について調べ、その利用例をコードする
21.ログ作成

【予定時間】
それぞれ２０分くらいを見積もっていた
合計 : 7時間

【実施時間】
1.　 20分 
2.　 20分 
3.　 5分 
4.　 5分 
5.　 20分 
6.　 30分 
7.　 20分 
8.　 20分 
9.　 5分 
10.　20分 
11.　20分 
12.　20分 
13.　10分 
14.　20分 
15.　10分 
16.　20分 
17.　20分 
18.　20分 
19.　20分 
20.　30分 
21.　30分 

合計 : 6時間35分

【メモ】
1.　puts:勝手に改行　print:改行しない　p:文字列型には""をつけて表示、数字はそのまま
2.　false,nilは偽、それ以外の値（1,"hello"）とtrueは真
3.　論理演算子を使って、文字列が等しいかを比較
4.　論理演算子を使って、数字の大小や等しいのかを比較
5.　変数は定義した後も変更できる。定数は定義した後変更しようとすると警告表示が出るが変更はできる
6.　四則演算は同様にでき、代入演算子　+= などが使える
7.　!逆　 &&かつ 　||または
8.　if文の戻り値は最後に処理されたものが戻り値となる。 
9.　メソッド、他でいう関数のようなもの
10.　returnを使って戻り値を設定できる
11.　文字型　ヒアドキュメントを使うことで見やすい形で文字列の定義ができる
12.　数値型　integer,floatクラスがあり、to_i,to_fを使ってお互いのクラスに変換することもできる
13.　if文の逆　条件式が偽の場合に処理を実行する
14.　if文とは違い、カテゴリーなどで条件分岐をしたい場合に用いる
15.　〈条件式 ? 真の時の処理 : 偽の時の処理〉簡単な条件分岐には向いている
16.　メソッドを定義する際に、キーワード引数で作った方が、引数の順番を気にしなくてすむ
17.　return に条件式を与えることで戻り値を真偽値にすることができる
18.　破壊的メソッドは、メソッドを適応した元の変数も変更させてしまう
19.　true,fales,nillのほかにも__FILE__,__LINE__などの変数もある
20.　rubyは基本的には値渡しだが、破壊的メソッドを使うことで参照渡しのような振る舞いをするようになる
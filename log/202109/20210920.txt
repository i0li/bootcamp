【ログ】
-------------------------------
開始時間　取り組んだ内容
終了時間　〈予定時間〉　→ 〈終了時間〉
-------------------------------
07:50 プログラミング言語におけるArray, List, Hash の違いを言語化する
08:10　〈30　→　20〉

08:10　Symbolクラスについて調べ、その利用例をコードする
08:35　〈30 →　25〉

08:35　正規表現 とは何かを調べ、まとめる
09:15　〈30　→　40〉

09:30 Regexpクラス とは何かを調べ、その利用例をコードする
10:00　〈30　→　30〉



14:00 classについて調べ、その利用例をコードする
14:40　〈30　→　40〉

14:40 「Rubyはすべてがオブジェクト」この意味を調べ、まとめる
15:00　〈30　→　20〉

15:00　アクセサメソッド とは何かを調べ、その利用例をコードする
15:30　〈30　→　30〉

15:30 アクセス修飾子 とは何かを調べ、その利用例をコードする
16:10　〈30　→　40〉

16:20　メモ記入
16:40　〈20　→　20〉

予定時間合計　４時間20分
実績時間合計　４時間25分


【メモ】
● array list hashの違い
arrayは想像している配列だが、listは配列でも少し違ったものでそれぞれの要素は次の要素へのリンクを持っていてそれにより並んでいる
Hashは個々を特定するためにキーを持ったもの

● symbolクラス
ソース上では文字列だが、裏では整数として扱われている。そのため文字列よりも処理速度がはやい
他にも、同じ内容であればidも同じになる、変更不可のため破壊的メソッドが使えないなどの特徴がある

● 正規表現
文字列を一般化して表現するもの。様々な「メタ文字」というものがあり、それらはそれぞれ特別な意味を持つ

● Regexpクラス
正規表現を使うためのクラス。//で囲んで定義をし、この中で正規表現を使った文字列の表現をすることができる

● class
値とそれに対する処理をひとまとめにしたもの

●rubyは全てがオブジェクト
Rubyでは定義するものは全て何かのインスタンスであり、それにたいしてインスタンスメソッドを使って処理をしているということ

●アクセスメソッド
クラス内で定義したインスタンス変数を、クラス外からアクセスするために必要なもの
attr_reader　→ インスタンス変数を取得するためのもの
attr_writer　→ インスタンス変数に何かの値をセットするためのもの
attr_accessor　→　上の二つの機能を一つにまとめたもの

●アクセス修飾子
クラス内で定義されているメソッドのアクセス範囲を限定的にするもの
public　→　クラス外からのアクセスを許可する
private　→ クラス内でのアクセスのみ許可する
protected　→ クラス外からのアクセスはできない　
             同じクラスあるいはサブクラスであればアクセスすることができる

【感想】
オブジェクト指向で大事なclassについて少し理解することができた。アクセスメソッドやアクセス修飾子を使って、クラス内にアクセスできる範囲に制限を
つけることで安全性なども意識をする必要があると感じた。